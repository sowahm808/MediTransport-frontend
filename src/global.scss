/*
 * App Global CSS
 * ----------------------------------------------------------------------------
 * Put style rules here that you want to apply globally. These styles are for
 * the entire app and not just one component. Additionally, this file can be
 * used as an entry point to import other CSS/Sass files to be included in the
 * output CSS.
 * For more information on global stylesheets, visit the documentation:
 * https://ionicframework.com/docs/layout/global-stylesheets
 */

/* Core CSS required for Ionic components to work properly */
@import "@ionic/angular/css/core.css";

/* Basic CSS for apps built with Ionic */
@import "@ionic/angular/css/normalize.css";
@import "@ionic/angular/css/structure.css";
@import "@ionic/angular/css/typography.css";
@import '@ionic/angular/css/display.css';

/* Optional CSS utils that can be commented out */
@import "@ionic/angular/css/padding.css";
@import "@ionic/angular/css/float-elements.css";
@import "@ionic/angular/css/text-alignment.css";
@import "@ionic/angular/css/text-transformation.css";
@import "@ionic/angular/css/flex-utils.css";

/* Global App Styles */
* {
  font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
}

.safe-area-padding {
  padding-top: env(safe-area-inset-top);
  padding-bottom: env(safe-area-inset-bottom);
}

.text-center {
  text-align: center;
}

.full-height {
  height: 100%;
}

.loading-container {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 200px;
}

.error-message {
  color: var(--ion-color-danger);
  text-align: center;
  padding: 1rem;
}

.success-message {
  color: var(--ion-color-success);
  text-align: center;
  padding: 1rem;
}

/* Custom button styles */
.button-gradient {
  --background: linear-gradient(45deg, var(--ion-color-primary), var(--ion-color-secondary));
  --color: white;
}

.fab-center {
  position: fixed;
  bottom: 20px;
  right: 20px;
  z-index: 1000;
}

/* Card enhancements */
.card-elevated {
  box-shadow: 0 4px 16px rgba(0, 0, 0, 0.12);
  border-radius: 12px;
}

.card-hover {
  transition: transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out;

  &:hover {
    transform: translateY(-2px);
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
  }
}

/* Status indicators */
.status-pending {
  color: var(--ion-color-warning);
}

.status-accepted {
  color: var(--ion-color-primary);
}

.status-in-progress {
  color: var(--ion-color-secondary);
}

.status-completed {
  color: var(--ion-color-success);
}

.status-canceled {
  color: var(--ion-color-danger);
}

/* Avatar styles */
.avatar-large {
  width: 80px;
  height: 80px;
  border-radius: 50%;
}

.avatar-medium {
  width: 48px;
  height: 48px;
  border-radius: 50%;
}

.avatar-small {
  width: 32px;
  height: 32px;
  border-radius: 50%;
}

/* Map container */
.map-container {
  width: 100%;
  height: 400px;
  border-radius: 8px;
  overflow: hidden;
}

/* Responsive utilities */
@media (max-width: 768px) {
  .hide-mobile {
    display: none !important;
  }
}

@media (min-width: 769px) {
  .hide-desktop {
    display: none !important;
  }
}
